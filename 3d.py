from gturtle import *
from math import *


makeTurtle()

screen_size = 1000

def draw_triangle(pos):
    setPos(pos[0])
    startPath()
    moveTo(pos[1])
    moveTo(pos[2])
    #moveTo(pos[0]) #
    fillPath()

def matrix_multiply(matrix, vector):
    result = [sum(matrix[i][j] * vector[j] for j in range(len(vector))) for i in range(len(matrix))]
    return result
    
def dot_product(vector1, vector2):
    return sum(x * y for x, y in zip(vector1, vector2))
    
def normalize(vector):
    length = sqrt(sum(x * x for x in vector))
    return [x / length for x in vector] if length != 0 else vector

def perspective_matrix(aspect_ratio, fov_y, near, far):
    tan_half_fov_y = tan(fov_y / 2)
    range_inv = 1 / (far - near)

    return [
        [1 / (aspect_ratio * tan_half_fov_y), 0, 0, 0],
        [0, 1 / tan_half_fov_y, 0, 0],
        [0, 0, -(far + near) * range_inv, -2 * far * near * range_inv],
        [0, 0, -1, 0]
    ]

def translation_matrix(translation_vector):
    return [
        [1, 0, 0, translation_vector[0]],
        [0, 1, 0, translation_vector[1]],
        [0, 0, 1, translation_vector[2]],
        [0, 0, 0, 1]
    ]

def scale_matrix(scale_vector):
    return [
        [scale_vector[0], 0, 0, 0],
        [0, scale_vector[1], 0, 0],
        [0, 0, scale_vector[2], 0],
        [0, 0, 0, 1]
    ]




def project_vertices(vertices, projection_matrix):
    projected_vertices = []
    for vertex in vertices:
        projected_vertex = matrix_multiply(projection_matrix, vertex + [1])
        scale = (1 / projected_vertex[3]) * screen_size
        projected_vertices.append([projected_vertex[0]*scale, projected_vertex[1]*scale, projected_vertex[2]])
    return projected_vertices

def translate(vertices, translation_vector):
    translation_matrix_ = translation_matrix(translation_vector)
    translated_vertices = [matrix_multiply(translation_matrix_, vertex + [1])[:3] for vertex in vertices]
    return translated_vertices

def scale(vertices, scale_vector):
    scale_matrix_ = scale_matrix(scale_vector)
    scaled_vertices = [matrix_multiply(scale_matrix_, vertex + [1])[:3] for vertex in vertices]
    return scaled_vertices
    
def rotate_x(vertices, theta):
    rotation_matrix_x = [
        [1, 0, 0, 0],
        [0, cos(theta), -sin(theta), 0],
        [0, sin(theta), cos(theta), 0],
        [0, 0, 0, 1]
    ]
    return [matrix_multiply(rotation_matrix_x, vertex + [1])[:3] for vertex in vertices]

def rotate_y(vertices, theta):
    rotation_matrix_y = [
        [cos(theta), 0, sin(theta), 0],
        [0, 1, 0, 0],
        [-sin(theta), 0, cos(theta), 0],
        [0, 0, 0, 1]
    ]
    return [matrix_multiply(rotation_matrix_y, vertex + [1])[:3] for vertex in vertices]

def rotate_z(vertices, theta):
    rotation_matrix_z = [
        [cos(theta), -sin(theta), 0, 0],
        [sin(theta), cos(theta), 0, 0],
        [0, 0, 1, 0],
        [0, 0, 0, 1]
    ]
    return [matrix_multiply(rotation_matrix_z, vertex + [1])[:3] for vertex in vertices]

def rotate(vertices, angles):
    rx, ry, rz = angles
    rotated_vertices = rotate_x(vertices, rx)
    rotated_vertices = rotate_y(rotated_vertices, ry)
    rotated_vertices = rotate_z(rotated_vertices, rz)
    return rotated_vertices
    


def poly_sort(poly):
    return -(pv[poly[0][0]][2] + pv[poly[1][0]][2] + pv[poly[2][0]][2]) / 3

projection_matrix = perspective_matrix(1, radians(90), 0.1, 100)


vertices = [[2.624928, 0.62498, 0.732112], [3.208829, 0.614622, 0.627561], [3.541836, 0.62498, 0.184796], [2.077611, 0.62498, -0.184796], [2.182162, 0.614622, 0.399106], [2.994519, 0.62498, -0.732112], [2.410618, 0.614622, -0.627561], [3.437285, 0.614622, -0.399106], [3.432137, -0.195044, 0.854102], [2.910505, -0.197558, 1.050929], [3.835508, -0.14156, 0.272241], [1.807345, -0.149412, -0.046236], [3.354664, -0.54495, 0.541316], [1.901952, -0.191969, 0.531627], [2.127553, -0.545195, 0.350585], [2.326721, -0.216051, 0.915647], [2.691762, -0.563344, 0.707846], [2.927632, -0.574384, -0.72813], [2.278096, -0.191969, -0.907771], [2.209387, -0.557184, -0.430752], [1.845273, -0.24274, -0.390823], [3.511389, -0.564727, -0.20939], [3.717494, -0.191969, -0.531627], [3.124851, -0.174426, -1.020546], [1.329902, 0.421881, 0.112569], [2.062998, 0.54623, -0.059139], [2.055728, 0.518903, 0.080288], [1.46807, 0.378786, 0.065064], [2.007366, 0.418326, -0.0], [1.360158, 0.407964, -0.108759], [1.873944, -0.286986, 0.0], [1.526535, -0.010965, 0.11568], [1.819826, -0.156421, 0.076611], [1.426626, -0.001773, -0.080804], [3.968422, -0.013606, 0.243968], [3.66004, -0.269602, 0.175781], [3.659036, 0.131449, -0.0], [3.950181, 0.184728, -0.14643], [3.661197, -0.207298, -0.238802], [4.063524, -0.024357, -0.168179], [4.400368, 0.622576, 0.007567], [4.194284, 0.616545, 0.030004], [4.278392, 0.610189, -0.087881], [2.896794, 0.761706, 0.030012], [2.931004, 0.937478, 0.15504], [2.964401, 0.954452, -0.123945], [2.726606, 0.761896, 0.051715], [2.654684, 0.937478, 0.121281], [2.688442, 0.937478, -0.15504], [3.027565, 0.621477, 0.644642], [3.4083, 0.62715, 0.306345], [2.844757, 0.755201, -0.085358], [3.454365, 0.621477, -0.217842], [2.165082, 0.621477, 0.217842], [2.503379, 0.62715, 0.598577], [2.591882, 0.621477, -0.644642], [2.211147, 0.62715, -0.306345], [3.116068, 0.62715, -0.598577], [-0.484033, 0.020155, 0.576947], [0.484034, 0.020155, 0.576947], [0.103827, 0.15985, 0.640278], [-0.103827, 0.15985, 0.640278], [0.393837, 0.378491, 0.790033], [-0.400843, 0.371054, 0.515477], [-0.393837, 0.378491, 0.790033], [0.400844, 0.371054, 0.515477], [0.633263, 0.24203, 0.566494], [-0.633263, 0.24203, 0.566494], [-0.320532, 0.114372, 0.8087], [0.320533, 0.114372, 0.8087], [0.0, -0.859401, 0.691666], [0.0, -0.1875, 0.796875], [0.0, 0.367889, 0.758962], [0.0, 0.739405, -0.758502], [0.0, -0.248586, -0.692479], [-0.258974, -0.3156, 0.417902], [-0.380003, -0.961727, 0.499138], [0.750929, 0.043677, 0.516782], [0.804002, 0.36731, 0.511894], [0.224125, 0.132533, 0.757452], [-0.096071, -0.81117, 0.703592], [0.0, -0.195313, 0.75], [0.0, -0.140625, 0.742188], [-0.750929, 0.043677, 0.516782], [-0.224831, 0.55252, 0.798764], [0.224832, 0.55252, 0.798764], [-0.12315, -0.178023, 0.775416], [0.0, -0.302549, 0.784118], [0.12315, -0.178023, 0.775416], [0.096071, -0.81117, 0.703592], [-0.308956, 0.38547, 0.812405], [-0.553093, 0.260929, 0.693617], [-0.414048, 0.075581, 0.705376], [0.308957, 0.38547, 0.812405], [0.414048, 0.075581, 0.705376], [0.553093, 0.260929, 0.693617], [-0.224125, 0.132533, 0.757452], [-0.248893, 0.680857, 0.649552], [0.0, 0.976525, 0.190772], [0.0, -0.654313, 0.330514], [-0.911953, 0.420039, -0.321816], [-0.647815, -0.09471, -0.356679], [0.380003, -0.961727, 0.499138], [0.258974, -0.3156, 0.417902], [-0.707038, 0.797508, -0.22044], [0.707038, 0.797508, -0.22044], [0.248893, 0.680857, 0.649552], [-0.804002, 0.36731, 0.511894], [-1.279217, 0.168898, -0.468389], [0.781818, -0.007674, -0.24701], [-0.781818, -0.007674, -0.24701], [1.279217, 0.168898, -0.468389], [-1.151718, 0.460262, -0.412947], [1.151718, 0.460262, -0.412947], [0.647815, -0.09471, -0.356679], [0.911953, 0.420039, -0.321816], [-3.141412, -0.714538, 0.714538], [-3.141412, 0.714538, 0.714538], [-3.141412, -0.714538, -0.714538], [-3.141412, 0.714538, -0.714538], [-1.712337, -0.714538, 0.714538], [-1.712337, 0.714538, 0.714538], [-1.712337, -0.714538, -0.714538], [-1.712337, 0.714538, -0.714538]]
normals = [[0.3309, 0.3378, 0.8812], [-0.9205, 0.3488, 0.1764], [-0.225, 0.2832, 0.9323], [-0.1309, 0.3445, -0.9296], [-0.9379, 0.2946, -0.183], [0.9245, 0.3471, -0.1575], [0.1857, -0.729, 0.6588], [-0.7802, -0.6201, 0.0821], [-0.3794, -0.735, 0.5619], [-0.0985, -0.5552, -0.8258], [-0.2702, -0.7453, -0.6095], [-0.6561, -0.7525, -0.0572], [0.8371, -0.5398, -0.089], [0.4736, -0.7111, -0.5197], [-0.1221, 0.9752, 0.1848], [0.1398, -0.4964, 0.8568], [0.0484, -0.9797, -0.1945], [-0.1864, 0.9786, -0.087], [-0.9782, -0.1671, -0.1232], [-0.1629, -0.5487, 0.82], [0.4449, 0.8955, 0.0059], [-0.0458, -0.3381, -0.94], [0.0631, 0.891, 0.4497], [-0.6529, 0.572, -0.4966], [0.0254, 0.117, -0.9928], [0.1011, 0.157, -0.9824], [0.6194, -0.1114, -0.7771], [0.3944, -0.9117, 0.1148], [0.1015, -0.5897, 0.8012], [0.9611, -0.2577, 0.0994], [-0.1109, -0.405, 0.9076], [-0.0073, 0.9982, 0.0599], [-0.5768, -0.6721, -0.4643], [-0.9344, -0.3375, -0.1142], [-0.0606, 0.9981, -0.0074], [0.7825, -0.5324, -0.3229], [0.1239, -0.2599, -0.9577], [-0.0092, 0.9745, 0.2243], [0.1187, 0.9815, 0.1501], [-0.2457, 0.9693, -0.0111], [-0.156, 0.9799, 0.124], [0.0103, 0.9715, -0.2369], [-0.1368, 0.9758, -0.1703], [0.216, 0.9764, 0.0084], [0.1814, 0.9724, -0.1467], [-0.0392, -0.9992, 0.0112], [0.0362, -0.9988, 0.0339], [0.0085, -0.9999, 0.0091], [0.168, 0.4064, 0.8981], [0.7537, 0.3521, 0.5549], [0.7407, 0.3625, 0.5656], [-0.9203, 0.3518, 0.171], [-0.6116, 0.3695, 0.6996], [-0.5737, 0.323, 0.7527], [-0.1729, 0.3092, -0.9351], [-0.738, 0.3365, -0.5849], [-0.7527, 0.323, -0.5737], [0.9263, 0.3353, -0.1718], [0.6009, 0.3562, -0.7156], [0.5737, 0.323, -0.7527], [0.2634, -0.6747, 0.6895], [0.7087, -0.5509, 0.4407], [0.6858, -0.7095, 0.1619], [-0.8205, -0.5658, 0.0816], [-0.5399, -0.6306, 0.5576], [-0.1576, -0.6238, 0.7656], [-0.5811, -0.6036, -0.5458], [0.4662, -0.6603, -0.5888], [0.1206, -0.6541, 0.7467], [0.1537, -0.469, -0.8697], [-0.5523, -0.7973, 0.2436], [-0.8331, -0.3755, 0.4061], [0.3682, 0.1739, 0.9133], [0.5587, 0.1887, 0.8076], [0.7447, 0.5561, -0.369], [0.0684, -0.0569, -0.996], [0.8434, -0.4955, 0.2075], [0.0952, 0.2893, 0.9525], [-0.4717, 0.353, 0.808], [-0.8835, 0.3996, 0.2443], [-0.4592, 0.5099, -0.7274], [0.6492, -0.7524, -0.1113], [0.7324, -0.6133, -0.2958], [0.106, 0.5535, 0.826], [-0.1412, 0.9754, -0.1694], [-0.0223, -0.9997, 0.004], [0.6387, -0.1236, 0.7595], [-0.6387, -0.1236, 0.7595], [-0.5709, 0.2145, 0.7925], [0.5709, 0.2145, 0.7925], [0.5894, 0.807, -0.0369], [0.4872, 0.8732, -0.0112], [0.459, -0.7567, 0.4656], [-0.459, -0.7567, 0.4656], [-0.499, 0.6156, 0.61], [-0.6114, 0.646, 0.457], [0.4935, 0.2559, 0.8312], [-0.6085, -0.0879, 0.7887], [0.4033, -0.0784, 0.9117], [0.0502, 0.0414, 0.9979], [-0.0502, 0.0414, 0.9979], [0.1702, -0.0052, 0.9854], [0.1596, -0.1582, 0.9744], [0.2165, -0.6181, 0.7557], [-0.2165, -0.6181, 0.7557], [0.5384, -0.1177, 0.8344], [-0.5384, -0.1177, 0.8344], [-0.0681, -0.1096, 0.9916], [-0.2291, -0.1594, 0.9603], [-1.0, -0.0, -0.0], [-0.0549, 0.7581, 0.6498], [-0.2694, -0.0318, 0.9625], [0.2694, -0.0318, 0.9625], [0.4481, -0.2824, 0.8482], [-0.4481, -0.2824, 0.8482], [-0.5454, 0.3373, 0.7673], [-0.3735, -0.0465, -0.9265], [0.8015, -0.5559, -0.2205], [-0.8015, -0.5559, -0.2205], [0.9579, -0.2814, 0.0577], [-0.9579, -0.2814, 0.0577], [0.4137, -0.0607, -0.9084], [-0.4872, -0.1923, -0.8518], [0.1041, 0.9649, -0.241], [-0.1041, 0.9649, -0.241], [-0.4729, 0.6013, 0.6441], [-0.4069, 0.8523, 0.3286], [-0.9803, -0.159, 0.1169], [0.8854, 0.4424, 0.1426], [-0.8854, 0.4424, 0.1426], [0.4972, -0.8641, 0.0782], [-0.4972, -0.8641, 0.0782], [0.5808, -0.8118, 0.0601], [-0.5808, -0.8118, 0.0601], [-0.3461, 0.0585, 0.9364], [0.4056, 0.0035, 0.9141], [-0.4056, 0.0035, 0.9141], [-0.3807, 0.2555, -0.8887], [-0.2109, 0.0929, -0.9731], [0.2109, 0.0929, -0.9731], [0.6571, -0.4122, 0.6311], [-0.6571, -0.4122, 0.6311], [-0.3176, -0.9353, 0.1561], [0.3176, -0.9353, 0.1561], [-0.5894, 0.807, -0.0369], [-0.4872, 0.8732, -0.0112], [0.938, 0.2103, 0.2754], [-0.938, 0.2103, 0.2754], [0.499, 0.6156, 0.61], [0.6114, 0.646, 0.457], [-0.4935, 0.2559, 0.8312], [0.6085, -0.0879, 0.7887], [-0.4033, -0.0784, 0.9117], [-0.1702, -0.0052, 0.9854], [-0.1596, -0.1582, 0.9744], [0.2291, -0.1594, 0.9603], [0.0681, -0.1096, 0.9916], [0.0549, 0.7581, 0.6498], [0.1787, -0.1084, 0.9779], [-0.1787, -0.1084, 0.9779], [-0.3742, -0.7532, -0.541], [0.3742, -0.7532, -0.541], [0.5454, 0.3373, 0.7673], [0.3735, -0.0465, -0.9265], [-0.4359, -0.7826, -0.4444], [0.4359, -0.7826, -0.4444], [0.2901, -0.9488, -0.1249], [-0.2901, -0.9488, -0.1249], [0.4872, -0.1923, -0.8518], [-0.4137, -0.0607, -0.9084], [0.5097, 0.4702, -0.7205], [-0.5097, 0.4702, -0.7205], [0.5246, 0.7626, 0.3785], [-0.5246, 0.7626, 0.3785], [0.4069, 0.8523, 0.3286], [0.4729, 0.6013, 0.6441], [0.9803, -0.159, 0.1169], [0.3461, 0.0585, 0.9364], [0.4079, -0.8892, 0.2073], [-0.4079, -0.8892, 0.2073], [0.3807, 0.2555, -0.8887], [-0.0, -0.0, -1.0], [1.0, -0.0, -0.0], [-0.0, -0.0, 1.0], [-0.0, -1.0, -0.0], [-0.0, 1.0, -0.0]]
faces = [[[1, 0], [9, 0], [8, 0]], [[4, 1], [11, 1], [13, 1]], [[9, 2], [0, 2], [15, 2]], [[6, 3], [23, 3], [18, 3]], [[11, 4], [3, 4], [20, 4]], [[7, 5], [10, 5], [22, 5]], [[12, 6], [9, 6], [16, 6]], [[13, 7], [11, 7], [20, 7]], [[15, 8], [14, 8], [16, 8]], [[18, 9], [23, 9], [17, 9]], [[19, 10], [18, 10], [17, 10]], [[20, 11], [19, 11], [14, 11]], [[22, 12], [10, 12], [21, 12]], [[17, 13], [22, 13], [21, 13]], [[26, 14], [25, 14], [24, 14]], [[28, 15], [24, 15], [27, 15]], [[29, 16], [28, 16], [27, 16]], [[25, 17], [29, 17], [24, 17]], [[24, 18], [29, 18], [33, 18]], [[32, 19], [31, 19], [30, 19]], [[11, 20], [31, 20], [32, 20]], [[33, 21], [11, 21], [30, 21]], [[36, 22], [34, 22], [37, 22]], [[42, 23], [37, 23], [41, 23]], [[39, 24], [37, 24], [42, 24]], [[39, 25], [38, 25], [37, 25]], [[39, 26], [42, 26], [40, 26]], [[34, 27], [38, 27], [39, 27]], [[43, 28], [44, 28], [46, 28]], [[45, 29], [44, 29], [43, 29]], [[44, 30], [47, 30], [46, 30]], [[44, 31], [45, 31], [47, 31]], [[46, 32], [48, 32], [51, 32]], [[47, 33], [48, 33], [46, 33]], [[47, 34], [45, 34], [48, 34]], [[51, 35], [45, 35], [43, 35]], [[48, 36], [45, 36], [51, 36]], [[43, 37], [54, 37], [49, 37]], [[50, 38], [51, 38], [49, 38]], [[46, 39], [56, 39], [53, 39]], [[54, 40], [43, 40], [53, 40]], [[51, 41], [57, 41], [55, 41]], [[56, 42], [46, 42], [55, 42]], [[51, 43], [50, 43], [52, 43]], [[57, 44], [51, 44], [52, 44]], [[19, 45], [16, 45], [14, 45]], [[16, 46], [21, 46], [12, 46]], [[16, 47], [17, 47], [21, 47]], [[1, 48], [0, 48], [9, 48]], [[10, 49], [2, 49], [8, 49]], [[2, 50], [1, 50], [8, 50]], [[4, 51], [3, 51], [11, 51]], [[15, 52], [0, 52], [13, 52]], [[0, 53], [4, 53], [13, 53]], [[6, 54], [5, 54], [23, 54]], [[20, 55], [3, 55], [18, 55]], [[3, 56], [6, 56], [18, 56]], [[7, 57], [2, 57], [10, 57]], [[23, 58], [5, 58], [22, 58]], [[5, 59], [7, 59], [22, 59]], [[12, 60], [8, 60], [9, 60]], [[10, 61], [8, 61], [12, 61]], [[21, 62], [10, 62], [12, 62]], [[14, 63], [13, 63], [20, 63]], [[14, 64], [15, 64], [13, 64]], [[9, 65], [15, 65], [16, 65]], [[19, 66], [20, 66], [18, 66]], [[17, 67], [23, 67], [22, 67]], [[28, 68], [26, 68], [24, 68]], [[29, 69], [25, 69], [28, 69]], [[30, 70], [31, 70], [33, 70]], [[31, 71], [24, 71], [33, 71]], [[31, 72], [27, 72], [24, 72]], [[11, 73], [27, 73], [31, 73]], [[29, 74], [27, 74], [11, 74]], [[33, 75], [29, 75], [11, 75]], [[40, 76], [34, 76], [39, 76]], [[41, 77], [34, 77], [40, 77]], [[36, 78], [35, 78], [34, 78]], [[37, 79], [34, 79], [41, 79]], [[37, 80], [38, 80], [36, 80]], [[34, 81], [35, 81], [38, 81]], [[49, 82], [51, 82], [43, 82]], [[53, 83], [43, 83], [46, 83]], [[55, 84], [46, 84], [51, 84]], [[19, 85], [17, 85], [16, 85]], [[62, 86], [69, 86], [66, 86]], [[68, 87], [64, 87], [67, 87]], [[69, 88], [62, 88], [60, 88]], [[64, 89], [68, 89], [61, 89]], [[64, 90], [61, 90], [63, 90]], [[66, 91], [65, 91], [62, 91]], [[103, 92], [77, 92], [88, 92]], [[83, 93], [75, 93], [86, 93]], [[97, 94], [107, 94], [84, 94]], [[72, 95], [85, 95], [106, 95]], [[78, 96], [85, 96], [95, 96]], [[83, 97], [91, 97], [107, 97]], [[88, 98], [77, 98], [79, 98]], [[79, 99], [72, 99], [88, 99]], [[72, 100], [96, 100], [86, 100]], [[84, 101], [90, 101], [72, 101]], [[96, 102], [72, 102], [90, 102]], [[89, 103], [70, 103], [102, 103]], [[70, 104], [80, 104], [76, 104]], [[88, 105], [89, 105], [102, 105]], [[80, 106], [86, 106], [76, 106]], [[88, 107], [70, 107], [89, 107]], [[86, 108], [70, 108], [87, 108]], [[71, 109], [82, 109], [81, 109]], [[71, 110], [82, 110], [86, 110]], [[82, 111], [88, 111], [72, 111]], [[86, 112], [82, 112], [72, 112]], [[77, 113], [95, 113], [94, 113]], [[91, 114], [83, 114], [92, 114]], [[84, 115], [91, 115], [90, 115]], [[99, 116], [76, 116], [75, 116]], [[74, 117], [103, 117], [99, 117]], [[75, 118], [74, 118], [99, 118]], [[77, 119], [109, 119], [115, 119]], [[110, 120], [83, 120], [100, 120]], [[115, 121], [74, 121], [73, 121]], [[100, 122], [74, 122], [101, 122]], [[98, 123], [105, 123], [73, 123]], [[104, 124], [98, 124], [73, 124]], [[106, 125], [98, 125], [72, 125]], [[97, 126], [98, 126], [104, 126]], [[83, 127], [107, 127], [100, 127]], [[115, 128], [105, 128], [78, 128]], [[104, 129], [100, 129], [107, 129]], [[77, 130], [114, 130], [109, 130]], [[101, 131], [83, 131], [110, 131]], [[77, 132], [103, 132], [114, 132]], [[75, 133], [83, 133], [101, 133]], [[100, 134], [112, 134], [110, 134]], [[109, 135], [111, 135], [113, 135]], [[108, 136], [110, 136], [112, 136]], [[114, 137], [115, 137], [113, 137]], [[113, 138], [111, 138], [114, 138]], [[108, 139], [112, 139], [101, 139]], [[66, 140], [69, 140], [59, 140]], [[58, 141], [68, 141], [67, 141]], [[59, 142], [69, 142], [60, 142]], [[61, 143], [68, 143], [58, 143]], [[62, 144], [65, 144], [60, 144]], [[67, 145], [64, 145], [63, 145]], [[103, 146], [88, 146], [102, 146]], [[76, 147], [86, 147], [75, 147]], [[106, 148], [85, 148], [78, 148]], [[72, 149], [97, 149], [84, 149]], [[107, 150], [91, 150], [84, 150]], [[77, 151], [78, 151], [95, 151]], [[86, 152], [96, 152], [83, 152]], [[85, 153], [72, 153], [93, 153]], [[79, 154], [93, 154], [72, 154]], [[88, 155], [87, 155], [70, 155]], [[86, 156], [80, 156], [70, 156]], [[71, 157], [88, 157], [82, 157]], [[71, 158], [87, 158], [88, 158]], [[86, 159], [87, 159], [71, 159]], [[79, 160], [77, 160], [94, 160]], [[92, 161], [83, 161], [96, 161]], [[85, 162], [93, 162], [95, 162]], [[99, 163], [103, 163], [102, 163]], [[102, 164], [70, 164], [99, 164]], [[99, 165], [70, 165], [76, 165]], [[74, 166], [114, 166], [103, 166]], [[75, 167], [101, 167], [74, 167]], [[115, 168], [114, 168], [74, 168]], [[100, 169], [73, 169], [74, 169]], [[73, 170], [105, 170], [115, 170]], [[100, 171], [104, 171], [73, 171]], [[105, 172], [106, 172], [78, 172]], [[107, 173], [97, 173], [104, 173]], [[106, 174], [105, 174], [98, 174]], [[97, 175], [72, 175], [98, 175]], [[77, 176], [115, 176], [78, 176]], [[115, 177], [109, 177], [113, 177]], [[111, 178], [109, 178], [114, 178]], [[101, 179], [110, 179], [108, 179]], [[101, 180], [112, 180], [100, 180]], [[117, 109], [118, 109], [116, 109]], [[119, 181], [122, 181], [118, 181]], [[123, 182], [120, 182], [122, 182]], [[121, 183], [116, 183], [120, 183]], [[122, 184], [116, 184], [118, 184]], [[119, 185], [121, 185], [123, 185]], [[117, 109], [119, 109], [118, 109]], [[119, 181], [123, 181], [122, 181]], [[123, 182], [121, 182], [120, 182]], [[121, 183], [117, 183], [116, 183]], [[122, 184], [120, 184], [116, 184]], [[119, 185], [117, 185], [121, 185]]]
 



hideTurtle()
#speed(1000)
setPenColor("Black")

r = 0
while True:
    transformed_vertices = rotate_y(vertices, r)
    transformed_vertices = translate(transformed_vertices, [0, 0, -7])
    
    camera_pos = [cos(r + pi/2), 0, sin(r + pi/2)]
    
    pv = project_vertices(transformed_vertices, projection_matrix)
    
    clean()
    for i in sorted(faces, key=poly_sort):
        pos = [pv[i[0][0]], pv[i[1][0]], pv[i[2][0]]]
        dif = dot_product(normals[i[0][1]], camera_pos)
        if dif > 0:
            color = (0, dif, dif)
            setFillColor(color)
            setPenColor(color)
            draw_triangle(pos)
    delay(1)
    r += 0.001