import pygame
from math import *

screen = pygame.display.set_mode((1000, 1000))


screen_size = 1000



def matrix_multiply(matrix, vector):
    result = [sum(matrix[i][j] * vector[j] for j in range(len(vector))) for i in range(len(matrix))]
    return result
    
def dot_product(vector1, vector2):
    return sum(x * y for x, y in zip(vector1, vector2))
    
def normalize(vector):
    length = sqrt(sum(x * x for x in vector))
    return [x / length for x in vector] if length != 0 else vector

def perspective_matrix(aspect_ratio, fov_y, near, far):
    tan_half_fov_y = tan(fov_y / 2)
    range_inv = 1 / (far - near)

    return [
        [1 / (aspect_ratio * tan_half_fov_y), 0, 0, 0],
        [0, 1 / tan_half_fov_y, 0, 0],
        [0, 0, -(far + near) * range_inv, -2 * far * near * range_inv],
        [0, 0, -1, 0]
    ]

def translation_matrix(translation_vector):
    return [
        [1, 0, 0, translation_vector[0]],
        [0, 1, 0, translation_vector[1]],
        [0, 0, 1, translation_vector[2]],
        [0, 0, 0, 1]
    ]

def scale_matrix(scale_vector):
    return [
        [scale_vector[0], 0, 0, 0],
        [0, scale_vector[1], 0, 0],
        [0, 0, scale_vector[2], 0],
        [0, 0, 0, 1]
    ]

def project_vertices(vertices, projection_matrix):
    projected_vertices = []
    for vertex in vertices:
        projected_vertex = matrix_multiply(projection_matrix, vertex + [1])
        scale = (1 / projected_vertex[3]) * screen_size
        projected_vertices.append([projected_vertex[0]*scale +  screen_size/2, -projected_vertex[1]*scale +  screen_size/2, projected_vertex[2]])
    return projected_vertices

def translate(vertices, translation_vector):
    translation_matrix_ = translation_matrix(translation_vector)
    translated_vertices = [matrix_multiply(translation_matrix_, vertex + [1])[:3] for vertex in vertices]
    return translated_vertices

def scale(vertices, scale_vector):
    scale_matrix_ = scale_matrix(scale_vector)
    scaled_vertices = [matrix_multiply(scale_matrix_, vertex + [1])[:3] for vertex in vertices]
    return scaled_vertices
    
def rotate_x(vertices, theta):
    rotation_matrix_x = [
        [1, 0, 0, 0],
        [0, cos(theta), -sin(theta), 0],
        [0, sin(theta), cos(theta), 0],
        [0, 0, 0, 1]
    ]
    return [matrix_multiply(rotation_matrix_x, vertex + [1])[:3] for vertex in vertices]

def rotate_y(vertices, theta):
    rotation_matrix_y = [
        [cos(theta), 0, sin(theta), 0],
        [0, 1, 0, 0],
        [-sin(theta), 0, cos(theta), 0],
        [0, 0, 0, 1]
    ]
    return [matrix_multiply(rotation_matrix_y, vertex + [1])[:3] for vertex in vertices]

def rotate_z(vertices, theta):
    rotation_matrix_z = [
        [cos(theta), -sin(theta), 0, 0],
        [sin(theta), cos(theta), 0, 0],
        [0, 0, 1, 0],
        [0, 0, 0, 1]
    ]
    return [matrix_multiply(rotation_matrix_z, vertex + [1])[:3] for vertex in vertices]

def rotate(vertices, angles):
    rx, ry, rz = angles
    rotated_vertices = rotate_x(vertices, rx)
    rotated_vertices = rotate_y(rotated_vertices, ry)
    rotated_vertices = rotate_z(rotated_vertices, rz)
    return rotated_vertices
    


def poly_sort(poly):
    return -(pv[poly[0][0]][2] + pv[poly[1][0]][2] + pv[poly[2][0]][2]) / 3

projection_matrix = perspective_matrix(1, radians(90), 0.1, 100)


vertices = [[0.0, -0.835, -2.798663], [0.0, 0.835, -2.798663], [0.480833, -0.835, -2.599496], [0.480833, 0.835, -2.599496], [0.68, -0.835, -2.118663], [0.68, 0.835, -2.118663], [0.480833, -0.835, -1.637831], [0.480833, 0.835, -1.637831], [0.0, -0.835, -1.438663], [0.0, 0.835, -1.438663], [-0.480833, -0.835, -1.637831], [-0.480833, 0.835, -1.637831], [-0.68, -0.835, -2.118663], [-0.68, 0.835, -2.118663], [-0.480833, -0.835, -2.599496], [-0.480833, 0.835, -2.599496], [-0.484034, 0.020155, 0.576947], [0.484034, 0.020155, 0.576947], [0.103827, 0.15985, 0.640278], [-0.103827, 0.15985, 0.640278], [0.393837, 0.378491, 0.790033], [0.15625, 0.4375, 0.648438], [-0.15625, 0.4375, 0.648438], [-0.464863, 0.413575, 0.544369], [-0.393837, 0.378491, 0.790033], [0.464863, 0.413575, 0.544369], [0.633263, 0.24203, 0.566494], [-0.633263, 0.24203, 0.566494], [-0.320532, 0.114372, 0.8087], [0.320532, 0.114372, 0.8087], [0.0, -0.859401, 0.691666], [0.0, -0.1875, 0.796875], [0.0, 0.367889, 0.758962], [0.0, 0.739405, -0.758502], [0.0, -0.248586, -0.692479], [-0.226815, -0.192583, 0.533658], [0.226815, -0.192583, 0.533658], [-0.380003, -0.961727, 0.499138], [0.586132, -0.069318, 0.571589], [0.832894, 0.398588, 0.625095], [-0.238492, 0.773072, 0.711296], [0.224125, 0.132533, 0.757452], [-0.096071, -0.81117, 0.703592], [0.0, -0.195312, 0.75], [0.0, -0.140625, 0.742188], [-0.586132, -0.069318, 0.571589], [-0.832894, 0.398588, 0.625095], [-0.224831, 0.55252, 0.798764], [0.224831, 0.55252, 0.798764], [-0.12315, -0.178023, 0.775416], [0.0, -0.302549, 0.784118], [0.12315, -0.178023, 0.775416], [0.096071, -0.81117, 0.703592], [-0.324415, 0.390499, 0.806824], [-0.553093, 0.260929, 0.693617], [-0.414048, 0.075581, 0.705376], [0.197297, 0.296692, 0.761588], [-0.197297, 0.296692, 0.761588], [0.324415, 0.390499, 0.806824], [0.414048, 0.075581, 0.705376], [0.553093, 0.260929, 0.693617], [-0.224125, 0.132533, 0.757452], [-0.331326, 0.565155, 0.530685], [0.238492, 0.773072, 0.711296], [-0.785346, 0.119346, 0.417886], [0.785346, 0.119346, 0.417886], [0.0, 0.976525, 0.190772], [0.0, -0.955036, 0.406793], [0.0, -0.4861, 0.298559], [0.85475, 0.356817, -0.188387], [-0.852752, 0.400749, -0.446254], [-0.748555, -0.110008, -0.327691], [-0.214052, -0.41023, 0.341908], [0.380003, -0.961727, 0.499138], [0.214052, -0.41023, 0.341908], [-0.71398, 0.702071, -0.370019], [-0.476077, 0.899132, 0.128827], [0.476077, 0.899132, 0.128827], [0.331326, 0.565155, 0.530685], [-0.755597, 0.411716, 0.316887], [0.755597, 0.411716, 0.316887], [0.71398, 0.702071, -0.370019], [-0.394325, -0.238686, -0.333531], [0.394325, -0.238686, -0.333531], [-0.717301, -0.102008, -0.097735], [-1.381379, 0.178077, -0.486387], [-1.090323, 0.422107, -0.369601], [1.20797, 0.310146, -0.440908], [1.090323, 0.422107, -0.369601], [0.717301, -0.102008, -0.097735], [-1.147014, 0.048217, -0.43788], [-0.801454, 0.038871, -0.291673], [-0.85475, 0.356817, -0.188387], [1.147014, 0.048217, -0.43788], [0.801454, 0.038871, -0.291673], [-1.20797, 0.310146, -0.440908], [-1.227002, 0.480829, -0.552827], [1.227002, 0.480829, -0.552827], [1.381379, 0.178077, -0.486387], [0.748555, -0.110008, -0.327691], [0.852752, 0.400749, -0.446254], [2.293174, -1.0, 0.0], [3.016774, -0.447215, 0.52572], [2.016789, -0.447215, 0.85064], [1.398749, -0.447215, 0.0], [2.016789, -0.447215, -0.85064], [3.016774, -0.447215, -0.52572], [2.569559, 0.447215, 0.85064], [1.569574, 0.447215, 0.52572], [1.569574, 0.447215, -0.52572], [2.569559, 0.447215, -0.85064], [3.187599, 0.447215, 0.0], [2.293174, 1.0, 0.0], [-3.289345, -0.768389, 0.768389], [-3.289345, 0.768389, 0.768389], [-3.289345, -0.768389, -0.768389], [-3.289345, 0.768389, -0.768389], [-1.752568, -0.768389, 0.768389], [-1.752568, 0.768389, 0.768389], [-1.752568, -0.768389, -0.768389], [-1.752568, 0.768389, -0.768389]]
normals = [[0.3827, -0.0, -0.9239], [0.9239, -0.0, -0.3827], [0.9239, -0.0, 0.3827], [0.3827, -0.0, 0.9239], [-0.3827, -0.0, 0.9239], [-0.9239, -0.0, 0.3827], [-0.0, 1.0, -0.0], [-0.9239, -0.0, -0.3827], [-0.3827, -0.0, -0.9239], [-0.0, -1.0, -0.0], [0.6387, -0.1236, 0.7595], [-0.6387, -0.1236, 0.7595], [-0.5709, 0.2145, 0.7925], [0.5709, 0.2145, 0.7925], [0.4981, 0.0686, 0.8644], [-0.1357, 0.9746, 0.1784], [0.6639, 0.6892, 0.2904], [0.3013, -0.9353, 0.1855], [-0.3013, -0.9353, 0.1855], [0.7728, -0.4578, 0.4396], [-0.3354, 0.3293, 0.8826], [-0.4376, 0.3548, 0.8262], [0.2619, -0.0527, 0.9637], [-0.3604, -0.2914, 0.8861], [0.4179, -0.0835, 0.9046], [0.0502, 0.0414, 0.9979], [-0.0502, 0.0414, 0.9979], [0.0626, -0.1369, 0.9886], [0.0238, -0.0291, 0.9993], [0.2165, -0.6181, 0.7557], [-0.2165, -0.6181, 0.7557], [0.5384, -0.1177, 0.8344], [-0.5384, -0.1177, 0.8344], [-0.0681, -0.1096, 0.9916], [-0.2291, -0.1594, 0.9603], [-1.0, -0.0, -0.0], [-0.0549, 0.7581, 0.6498], [-0.2694, -0.0318, 0.9625], [0.2694, -0.0318, 0.9625], [0.4365, -0.2731, 0.8572], [-0.4365, -0.2731, 0.8572], [-0.5765, 0.39, 0.718], [-0.2591, -0.1115, 0.9594], [0.3495, 0.6985, -0.6245], [-0.3218, 0.946, -0.0404], [0.97, 0.0149, -0.2426], [0.2268, -0.219, -0.949], [-0.2596, -0.1917, -0.9465], [-0.3239, -0.7792, -0.5366], [-0.3266, -0.884, -0.3344], [0.3649, -0.9054, -0.217], [-0.3649, -0.9054, -0.217], [0.9578, -0.2875, -0.003], [-0.9578, -0.2875, -0.003], [0.3209, -0.0631, -0.945], [-0.4621, -0.2889, -0.8385], [0.1796, 0.9544, -0.2384], [-0.1796, 0.9544, -0.2384], [0.8222, 0.5404, 0.1786], [-0.8222, 0.5404, 0.1786], [0.0969, 0.6792, 0.7275], [-0.2033, 0.7158, 0.6681], [-0.9719, 0.1588, 0.1735], [0.8929, 0.4316, 0.1283], [-0.8929, 0.4316, 0.1283], [0.9124, 0.4046, 0.0619], [0.1116, -0.9184, 0.3796], [-0.1116, -0.9184, 0.3796], [0.505, -0.8512, 0.1428], [-0.505, -0.8512, 0.1428], [0.9534, -0.2289, 0.1963], [-0.9534, -0.2289, 0.1963], [0.3392, -0.9374, 0.0787], [0.4749, -0.7702, 0.4258], [-0.2242, -0.0409, 0.9737], [-0.509, 0.8125, -0.2842], [-0.6312, -0.3333, 0.7004], [-0.9423, -0.2353, 0.238], [0.2501, 0.7285, 0.6377], [0.4184, -0.1326, 0.8985], [-0.4184, -0.1326, 0.8985], [-0.3902, -0.0802, 0.9172], [0.6348, 0.4599, 0.6209], [-0.0693, 0.9639, 0.2572], [0.1606, 0.9728, 0.167], [-0.2351, -0.174, -0.9563], [-0.117, -0.2695, -0.9559], [0.117, -0.2695, -0.9559], [0.6571, -0.4122, 0.6311], [-0.6571, -0.4122, 0.6311], [-0.3176, -0.9353, 0.1561], [0.3176, -0.9353, 0.1561], [-0.4981, 0.0686, 0.8644], [0.1357, 0.9746, 0.1784], [-0.6639, 0.6892, 0.2904], [0.9101, 0.1642, 0.3804], [-0.9101, 0.1642, 0.3804], [-0.7728, -0.4578, 0.4396], [0.3354, 0.3293, 0.8826], [0.4376, 0.3548, 0.8262], [-0.2619, -0.0527, 0.9637], [0.3604, -0.2914, 0.8861], [-0.4179, -0.0835, 0.9046], [-0.0626, -0.1369, 0.9886], [-0.0238, -0.0291, 0.9993], [0.2291, -0.1594, 0.9603], [0.0681, -0.1096, 0.9916], [0.0549, 0.7581, 0.6498], [0.1787, -0.1084, 0.9779], [-0.1787, -0.1084, 0.9779], [-0.003, -0.6803, 0.7329], [0.003, -0.6803, 0.7329], [0.5765, 0.39, 0.718], [0.2591, -0.1115, 0.9594], [-0.6569, 0.3055, -0.6893], [0.6569, 0.3055, -0.6893], [0.3218, 0.946, -0.0404], [-0.3495, 0.6985, -0.6245], [-0.97, 0.0149, -0.2426], [0.2596, -0.1917, -0.9465], [-0.2268, -0.219, -0.949], [-0.0936, -0.9438, 0.3169], [0.0936, -0.9438, 0.3169], [0.9364, 0.1995, -0.2887], [-0.9364, 0.1995, -0.2887], [0.3239, -0.7792, -0.5366], [0.3266, -0.884, -0.3344], [0.1982, -0.9613, -0.1912], [-0.1982, -0.9613, -0.1912], [0.4621, -0.2889, -0.8385], [-0.3209, -0.0631, -0.945], [0.1116, 0.9413, -0.3186], [-0.1116, 0.9413, -0.3186], [0.4526, 0.4089, -0.7924], [-0.4526, 0.4089, -0.7924], [0.5258, 0.5514, 0.6477], [-0.5258, 0.5514, 0.6477], [0.2033, 0.7158, 0.6681], [-0.0969, 0.6792, 0.7275], [0.9719, 0.1588, 0.1735], [-0.9124, 0.4046, 0.0619], [-0.3392, -0.9374, 0.0787], [-0.4749, -0.7702, 0.4258], [0.2242, -0.0409, 0.9737], [0.509, 0.8125, -0.2842], [0.6312, -0.3333, 0.7004], [0.9423, -0.2353, 0.238], [-0.2501, 0.7285, 0.6377], [0.3902, -0.0802, 0.9172], [0.4312, -0.8978, 0.0898], [-0.4312, -0.8978, 0.0898], [-0.6348, 0.4599, 0.6209], [0.0693, 0.9639, 0.2572], [-0.1606, 0.9728, 0.167], [0.2351, -0.174, -0.9563], [0.1876, -0.7947, 0.5774], [0.6071, -0.7947, -0.0], [-0.4911, -0.7947, 0.3568], [-0.4911, -0.7947, -0.3568], [0.1876, -0.7947, -0.5774], [0.9822, -0.1876, -0.0], [0.3035, -0.1876, 0.9342], [-0.7946, -0.1876, 0.5774], [-0.7946, -0.1876, -0.5774], [0.3035, -0.1876, -0.9342], [0.7946, 0.1876, 0.5774], [-0.3035, 0.1876, 0.9342], [-0.9822, 0.1876, -0.0], [-0.3035, 0.1876, -0.9342], [0.7946, 0.1876, -0.5774], [0.4911, 0.7947, 0.3568], [-0.1876, 0.7947, 0.5774], [-0.6071, 0.7947, -0.0], [-0.1876, 0.7947, -0.5774], [0.4911, 0.7947, -0.3568], [-0.0, -0.0, -1.0], [1.0, -0.0, -0.0], [-0.0, -0.0, 1.0]]
faces = [[[1, 0], [2, 0], [0, 0]], [[3, 1], [4, 1], [2, 1]], [[5, 2], [6, 2], [4, 2]], [[7, 3], [8, 3], [6, 3]], [[9, 4], [10, 4], [8, 4]], [[11, 5], [12, 5], [10, 5]], [[13, 6], [9, 6], [5, 6]], [[13, 7], [14, 7], [12, 7]], [[15, 8], [0, 8], [14, 8]], [[6, 9], [10, 9], [14, 9]], [[20, 10], [29, 10], [26, 10]], [[28, 11], [24, 11], [27, 11]], [[29, 12], [20, 12], [18, 12]], [[24, 13], [28, 13], [19, 13]], [[24, 14], [19, 14], [22, 14]], [[24, 15], [22, 15], [23, 15]], [[26, 16], [25, 16], [20, 16]], [[36, 17], [38, 17], [51, 17]], [[45, 18], [35, 18], [49, 18]], [[39, 19], [38, 19], [65, 19]], [[40, 20], [46, 20], [47, 20]], [[32, 21], [48, 21], [63, 21]], [[39, 22], [48, 22], [60, 22]], [[45, 23], [54, 23], [46, 23]], [[51, 24], [38, 24], [41, 24]], [[41, 25], [32, 25], [51, 25]], [[32, 26], [61, 26], [49, 26]], [[47, 27], [57, 27], [32, 27]], [[61, 28], [32, 28], [57, 28]], [[52, 29], [30, 29], [73, 29]], [[30, 30], [42, 30], [37, 30]], [[51, 31], [52, 31], [73, 31]], [[42, 32], [49, 32], [37, 32]], [[51, 33], [30, 33], [52, 33]], [[49, 34], [30, 34], [50, 34]], [[31, 35], [44, 35], [43, 35]], [[31, 36], [44, 36], [49, 36]], [[44, 37], [51, 37], [32, 37]], [[49, 38], [44, 38], [32, 38]], [[38, 39], [60, 39], [59, 39]], [[54, 40], [45, 40], [55, 40]], [[47, 41], [54, 41], [53, 41]], [[56, 42], [58, 42], [48, 42]], [[39, 43], [78, 43], [63, 43]], [[46, 44], [62, 44], [79, 44]], [[65, 45], [80, 45], [39, 45]], [[68, 46], [73, 46], [67, 46]], [[68, 47], [37, 47], [72, 47]], [[35, 48], [45, 48], [64, 48]], [[71, 49], [34, 49], [82, 49]], [[34, 50], [74, 50], [68, 50]], [[72, 51], [34, 51], [68, 51]], [[65, 52], [89, 52], [69, 52]], [[84, 53], [64, 53], [92, 53]], [[100, 54], [34, 54], [33, 54]], [[70, 55], [34, 55], [71, 55]], [[66, 56], [81, 56], [33, 56]], [[75, 57], [66, 57], [33, 57]], [[77, 58], [80, 58], [81, 58]], [[79, 59], [76, 59], [75, 59]], [[78, 60], [66, 60], [32, 60]], [[62, 61], [66, 61], [76, 61]], [[64, 62], [79, 62], [92, 62]], [[69, 63], [81, 63], [80, 63]], [[75, 64], [92, 64], [79, 64]], [[81, 65], [69, 65], [100, 65]], [[65, 66], [83, 66], [89, 66]], [[82, 67], [64, 67], [84, 67]], [[65, 68], [36, 68], [83, 68]], [[35, 69], [64, 69], [82, 69]], [[36, 70], [74, 70], [83, 70]], [[82, 71], [72, 71], [35, 71]], [[83, 72], [99, 72], [89, 72]], [[86, 73], [85, 73], [95, 73]], [[95, 74], [85, 74], [90, 74]], [[93, 75], [89, 75], [98, 75]], [[92, 76], [86, 76], [91, 76]], [[84, 77], [92, 77], [91, 77]], [[93, 78], [94, 78], [89, 78]], [[94, 79], [87, 79], [88, 79]], [[95, 80], [91, 80], [86, 80]], [[95, 81], [90, 81], [91, 81]], [[98, 82], [97, 82], [88, 82]], [[88, 83], [97, 83], [69, 83]], [[92, 84], [70, 84], [96, 84]], [[99, 85], [100, 85], [97, 85]], [[97, 86], [98, 86], [99, 86]], [[85, 87], [96, 87], [71, 87]], [[26, 88], [29, 88], [17, 88]], [[16, 89], [28, 89], [27, 89]], [[17, 90], [29, 90], [18, 90]], [[19, 91], [28, 91], [16, 91]], [[20, 92], [21, 92], [18, 92]], [[20, 93], [25, 93], [21, 93]], [[27, 94], [24, 94], [23, 94]], [[36, 95], [51, 95], [73, 95]], [[37, 96], [49, 96], [35, 96]], [[46, 97], [64, 97], [45, 97]], [[63, 98], [48, 98], [39, 98]], [[32, 99], [40, 99], [47, 99]], [[46, 100], [54, 100], [47, 100]], [[38, 101], [39, 101], [60, 101]], [[49, 102], [61, 102], [45, 102]], [[48, 103], [32, 103], [56, 103]], [[41, 104], [56, 104], [32, 104]], [[51, 105], [50, 105], [30, 105]], [[49, 106], [42, 106], [30, 106]], [[31, 107], [51, 107], [44, 107]], [[31, 108], [50, 108], [51, 108]], [[49, 109], [50, 109], [31, 109]], [[41, 110], [38, 110], [59, 110]], [[55, 111], [45, 111], [61, 111]], [[48, 112], [58, 112], [60, 112]], [[57, 113], [47, 113], [53, 113]], [[32, 114], [63, 114], [78, 114]], [[62, 115], [40, 115], [32, 115]], [[39, 116], [80, 116], [78, 116]], [[46, 117], [40, 117], [62, 117]], [[64, 118], [46, 118], [79, 118]], [[68, 119], [74, 119], [73, 119]], [[68, 120], [67, 120], [37, 120]], [[73, 121], [30, 121], [67, 121]], [[67, 122], [30, 122], [37, 122]], [[36, 123], [73, 123], [74, 123]], [[72, 124], [37, 124], [35, 124]], [[36, 125], [65, 125], [38, 125]], [[99, 126], [83, 126], [34, 126]], [[34, 127], [83, 127], [74, 127]], [[72, 128], [82, 128], [34, 128]], [[100, 129], [99, 129], [34, 129]], [[70, 130], [33, 130], [34, 130]], [[66, 131], [77, 131], [81, 131]], [[75, 132], [76, 132], [66, 132]], [[33, 133], [81, 133], [100, 133]], [[70, 134], [75, 134], [33, 134]], [[77, 135], [78, 135], [80, 135]], [[79, 136], [62, 136], [76, 136]], [[78, 137], [77, 137], [66, 137]], [[62, 138], [32, 138], [66, 138]], [[65, 139], [69, 139], [80, 139]], [[75, 140], [70, 140], [92, 140]], [[82, 141], [84, 141], [71, 141]], [[88, 142], [87, 142], [98, 142]], [[87, 143], [93, 143], [98, 143]], [[90, 144], [85, 144], [84, 144]], [[69, 145], [94, 145], [88, 145]], [[89, 146], [94, 146], [69, 146]], [[90, 147], [84, 147], [91, 147]], [[87, 148], [94, 148], [93, 148]], [[98, 149], [89, 149], [99, 149]], [[71, 150], [84, 150], [85, 150]], [[85, 151], [86, 151], [96, 151]], [[86, 152], [92, 152], [96, 152]], [[69, 153], [97, 153], [100, 153]], [[71, 154], [96, 154], [70, 154]], [[101, 155], [102, 155], [103, 155]], [[102, 156], [101, 156], [106, 156]], [[101, 157], [103, 157], [104, 157]], [[101, 158], [104, 158], [105, 158]], [[101, 159], [105, 159], [106, 159]], [[102, 160], [106, 160], [111, 160]], [[103, 161], [102, 161], [107, 161]], [[104, 162], [103, 162], [108, 162]], [[105, 163], [104, 163], [109, 163]], [[106, 164], [105, 164], [110, 164]], [[102, 165], [111, 165], [107, 165]], [[103, 166], [107, 166], [108, 166]], [[104, 167], [108, 167], [109, 167]], [[105, 168], [109, 168], [110, 168]], [[106, 169], [110, 169], [111, 169]], [[107, 170], [111, 170], [112, 170]], [[108, 171], [107, 171], [112, 171]], [[109, 172], [108, 172], [112, 172]], [[110, 173], [109, 173], [112, 173]], [[111, 174], [110, 174], [112, 174]], [[114, 35], [115, 35], [113, 35]], [[116, 175], [119, 175], [115, 175]], [[120, 176], [117, 176], [119, 176]], [[118, 177], [113, 177], [117, 177]], [[119, 9], [113, 9], [115, 9]], [[116, 6], [118, 6], [120, 6]], [[1, 0], [3, 0], [2, 0]], [[3, 1], [5, 1], [4, 1]], [[5, 2], [7, 2], [6, 2]], [[7, 3], [9, 3], [8, 3]], [[9, 4], [11, 4], [10, 4]], [[11, 5], [13, 5], [12, 5]], [[5, 6], [3, 6], [1, 6]], [[1, 6], [15, 6], [13, 6]], [[13, 6], [11, 6], [9, 6]], [[9, 6], [7, 6], [5, 6]], [[5, 6], [1, 6], [13, 6]], [[13, 7], [15, 7], [14, 7]], [[15, 8], [1, 8], [0, 8]], [[14, 9], [0, 9], [2, 9]], [[2, 9], [4, 9], [6, 9]], [[6, 9], [8, 9], [10, 9]], [[10, 9], [12, 9], [14, 9]], [[14, 9], [2, 9], [6, 9]], [[114, 35], [116, 35], [115, 35]], [[116, 175], [120, 175], [119, 175]], [[120, 176], [118, 176], [117, 176]], [[118, 177], [114, 177], [113, 177]], [[119, 9], [117, 9], [113, 9]], [[116, 6], [114, 6], [118, 6]]]
 





r = 0
while True:
    transformed_vertices = rotate_y(vertices, r)
    transformed_vertices = translate(transformed_vertices, [0, 0, -7])
    
    camera_pos = [cos(r + pi/2), 0, sin(r + pi/2)]
    
    pv = project_vertices(transformed_vertices, projection_matrix)
    screen.fill((255, 255, 255))

    for i in sorted(faces, key=poly_sort):
        pos = [pv[i[0][0]][:2], pv[i[1][0]][:2], pv[i[2][0]][:2]]
        dif = dot_product(normals[i[0][1]], camera_pos)
        if dif > 0:
            color = (0, dif * 200, dif * 200)

            pygame.draw.polygon(screen, color, pos, 0)
    pygame.display.update()
    r += 0.001
